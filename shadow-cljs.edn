{:source-paths ["src", "test"]
 ; :lein true
 :dependencies [[instaparse "1.4.10"]
                [nano-id "1.0.0"]
                [hiccup-find "1.0.0"]
                ;[org.clojure/core.memoize "1.0.236"]
                [org.clojure/tools.cli "1.0.194"]]
 :dev-http {8080 "target/"}
 :builds {:lib
          {:target :node-library
           ; :output-to "dist/lib.js"
           :output-to "dist/bach.cjs.js"
           :exports-var bach.compose/compose}
           ; :exports-var bach.data/nano-hash}
           ; :exports {compose bach.compose/compose,
           ;           hashy bach.data/nano-hash}}
          ; TODO: Update package.json:main, package.json:module
          ; :esm
          ; {:target :esm
          ;  :output-dir "dist"
          ;  :output-to "dist/bach.esm.js"
          ;  :modules {:lib {:exports {compose bach.compose/compose}}}}
          :umd
          {:target :browser
           :output-dir "dist"
           ; :js-options {:entry-keys ["module" "browser" "main"]
           ;              :js-provider :shadow}
           ; :output-to "dist/bach.umd.js"
           :js-options {:entry-keys ["module" "browser" "main"]}
           ; :release {:compiler-options {:optimizations :simple}}
           ; LAST
           ; :modules {:main {:entries [bach.compose]}}}
           :modules {:bach.umd {:entries [bach.compose]}}}
           ; :modules {:man {:
          :npm
          {:target :npm-module
           :output-dir "dist"
           :entries [bach.compose]}
          :test
          {:target    :node-test
           :output-to "target/js/node-tests.js"
           :ns-regexp "-test$"
           :autorun   true
           ; :js-options
           ; {;:js-provider :shadow
           ;  :resolve {"crypto" {:target :file
           ;                      :file "test/bach/runtime.js"}}}
            ; :resolve {"crypto" {:target :node
            ;                     :require "crypto"}}}
            ; :resolve {"crypto" {:target :global
            ;                     :require "crypto"}}}
           }}}
